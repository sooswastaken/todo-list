{"ast":null,"code":"var _jsxFileName = \"/Users/sudarshanlamichhane/Desktop/soosbot-dashboard/src/App.js\",\n    _s = $RefreshSig$();\n\nimport TodoList from \"./TodoList\";\nimport { useState, useRef, useEffect } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LOCAL_STORAGE_KEY = 'todoApp.todos';\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const todoNameRef = useRef();\n  useEffect;\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n  }, [todos]);\n\n  function handleAddTodo(e) {\n    const name = todoNameRef.current.value;\n    if (name === '') return;\n    console.log(name);\n    todoNameRef.current.value = null;\n    setTodos(prevTodos => {\n      return [...prevTodos, {\n        id: uuid(),\n        name: name,\n        complete: false\n      }];\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: todoNameRef,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTodo,\n      children: \"Add todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Clear Completed Todos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"0 left to do\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"52iFtPgzl31SmfSv7XjBgNY9Iv8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sudarshanlamichhane/Desktop/soosbot-dashboard/src/App.js"],"names":["TodoList","useState","useRef","useEffect","v4","uuid","LOCAL_STORAGE_KEY","App","todos","setTodos","todoNameRef","localStorage","setItem","JSON","stringify","handleAddTodo","e","name","current","value","console","log","prevTodos","id","complete"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,YAArB;AACA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,SAAQC,EAAE,IAAIC,IAAd,QAAyB,MAAzB;;;AACA,MAAMC,iBAAiB,GAAG,eAA1B;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMS,WAAW,GAAGR,MAAM,EAA1B;AAEAC,EAAAA,SAAS;AACTA,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,YAAY,CAACC,OAAb,CAAqBN,iBAArB,EAAwCO,IAAI,CAACC,SAAL,CAAeN,KAAf,CAAxC;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;;AAIA,WAASO,aAAT,CAAuBC,CAAvB,EAA0B;AACxB,UAAMC,IAAI,GAAGP,WAAW,CAACQ,OAAZ,CAAoBC,KAAjC;AACA,QAAIF,IAAI,KAAK,EAAb,EAAiB;AACjBG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACAP,IAAAA,WAAW,CAACQ,OAAZ,CAAoBC,KAApB,GAA4B,IAA5B;AACAV,IAAAA,QAAQ,CAACa,SAAS,IAAI;AACpB,aAAO,CAAC,GAAGA,SAAJ,EAAe;AAAEC,QAAAA,EAAE,EAAClB,IAAI,EAAT;AAAaY,QAAAA,IAAI,EAAEA,IAAnB;AAAyBO,QAAAA,QAAQ,EAAE;AAAnC,OAAf,CAAP;AACD,KAFO,CAAR;AAID;;AAED,sBACE;AAAA,4BACA,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEhB;AAAjB;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAO,MAAA,GAAG,EAAEE,WAAZ;AAAwB,MAAA,IAAI,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA;AAAQ,MAAA,OAAO,EAAEK,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHA,eAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJA,eAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALA;AAAA,kBADF;AASD;;GA7BQR,G;;KAAAA,G;AA8BT,eAAeA,GAAf","sourcesContent":["import TodoList from \"./TodoList\";\nimport { useState, useRef, useEffect } from 'react'\nimport {v4 as uuid} from 'uuid'\nconst LOCAL_STORAGE_KEY = 'todoApp.todos'\n\nfunction App() {\n  const [todos, setTodos] = useState([])\n  const todoNameRef = useRef()\n\n  useEffect\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos))\n  }, [todos])\n\n  function handleAddTodo(e) {\n    const name = todoNameRef.current.value\n    if (name === '') return\n    console.log(name)\n    todoNameRef.current.value = null\n    setTodos(prevTodos => {\n      return [...prevTodos, { id:uuid(), name: name, complete: false}]\n    }\n    )\n  }\n\n  return (\n    <>\n    <TodoList todos={todos}/>\n    <input ref={todoNameRef}type=\"text\"/>\n    <button onClick={handleAddTodo}>Add todo</button>\n    <button>Clear Completed Todos</button>\n    <div>0 left to do</div>\n    </>\n  )\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}