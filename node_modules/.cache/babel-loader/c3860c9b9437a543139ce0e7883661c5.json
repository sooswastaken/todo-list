{"ast":null,"code":"var _jsxFileName = \"/Users/sudarshanlamichhane/Desktop/soosbot-dashboard/src/App.js\",\n    _s = $RefreshSig$();\n\nimport TodoList from \"./TodoList\";\nimport { useState, useRef, useEffect } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LOCAL_STORAGE_KEY = 'todoApp.todos';\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const todoNameRef = useRef();\n  useEffect(() => {\n    const stored_Todos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    if (stored_Todos) setTodos(stored_Todos);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n  }, [todos]);\n\n  function toggleTodo(id) {\n    const newTodos = [...todos];\n    const todo = newTodos.find(todo => todo.id === id);\n    todo.complete = !todo.complete;\n    setTodos(newTodos);\n  }\n\n  function handleClearTodos() {\n    const newTodos = todos.filter(todo => !todo.complete);\n    setTodos(newTodos);\n  }\n\n  function handleAddTodo(e) {\n    const name = todoNameRef.current.value;\n    if (name === '') return;\n    console.log(name);\n    todoNameRef.current.value = null;\n    setTodos(prevTodos => {\n      return [...prevTodos, {\n        id: uuid(),\n        name: name,\n        complete: false\n      }];\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"todos\",\n        children: /*#__PURE__*/_jsxDEV(TodoList, {\n          todos: todos,\n          toggleTodo: toggleTodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: todoNameRef,\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddTodo,\n        children: \"Add todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClearTodos,\n        children: \"Clear Completed Todos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"counter\",\n        children: [todos.filter(todos => !todos.complete).length, \" left to do\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"qH2GEr92xkIFQxR2Djx4V7Ti/yU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sudarshanlamichhane/Desktop/soosbot-dashboard/src/App.js"],"names":["TodoList","useState","useRef","useEffect","v4","uuid","LOCAL_STORAGE_KEY","App","todos","setTodos","todoNameRef","stored_Todos","JSON","parse","localStorage","getItem","setItem","stringify","toggleTodo","id","newTodos","todo","find","complete","handleClearTodos","filter","handleAddTodo","e","name","current","value","console","log","prevTodos","length"],"mappings":"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","sourcesContent":["import TodoList from \"./TodoList\";\nimport { useState, useRef, useEffect } from 'react'\nimport {v4 as uuid} from 'uuid'\nconst LOCAL_STORAGE_KEY = 'todoApp.todos'\n\nfunction App() {\n  const [todos, setTodos] = useState([])\n  const todoNameRef = useRef()\n\n  useEffect(() => {\n    const stored_Todos = JSON.parse(localStorage.getItem\n      (LOCAL_STORAGE_KEY))\n    if (stored_Todos) setTodos(stored_Todos)\n  }, [])\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos))\n  }, [todos])\n\n  function toggleTodo(id) {\n    const newTodos = [...todos]\n    const todo = newTodos.find(todo => todo.id ===id)\n    todo.complete = !todo.complete\n    setTodos(newTodos)\n  }\n\n  function handleClearTodos() {\n    const newTodos = todos.filter(todo => !todo.complete)\n    setTodos(newTodos)\n  }\n\n  function handleAddTodo(e) {\n    const name = todoNameRef.current.value\n    if (name === '') return\n    console.log(name)\n    todoNameRef.current.value = null\n    setTodos(prevTodos => {\n      return [...prevTodos, { id:uuid(), name: name, complete: false}]\n    }\n    )\n  }\n\n  return (\n    <>\n    <div class=\"content\">\n    <div class=\"todos\">\n    <TodoList todos={todos} toggleTodo={toggleTodo}/>\n    </div>\n    <input ref={todoNameRef}type=\"text\"/>\n    <button onClick={handleAddTodo}>Add todo</button>\n    <button onClick={handleClearTodos}>Clear Completed Todos</button>\n    <div class=\"counter\">{todos.filter(todos => !todos.complete).length} left to do</div>\n    </div>\n    </>\n  )\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}